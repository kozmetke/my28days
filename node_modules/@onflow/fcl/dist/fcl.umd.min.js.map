{"version":3,"file":"fcl.umd.min.js","sources":["../src/utils/async.ts","../src/discovery/rpc/requests.ts","../src/discovery/rpc/handlers/exec-service.ts","../src/discovery/rpc/handlers/request-wc-qr.ts","../src/discovery/exec-hook.ts","../src/utils/web/render-frame.js","../src/utils/web/render-pop.js","../src/utils/web/render-tab.js","../src/utils/web/default-config.js","../src/utils/web/strategies/utils/frame.js","../src/VERSION.js","../src/utils/web/strategies/utils/pop.js","../src/utils/web/strategies/utils/tab.js","../src/utils/web/strategies/utils/extension.js","../src/utils/web/exec-local.js","../src/utils/web/coreStrategies.js","../src/utils/web/strategies/iframe-rpc.js","../src/utils/web/strategies/pop-rpc.js","../src/utils/web/strategies/tab-rpc.js","../src/utils/web/strategies/ext-rpc.js","../src/utils/walletconnect/loader.ts","../src/fcl.ts","../src/discovery/rpc/client.ts","../src/discovery/exec-discovery.ts"],"sourcesContent":["const AbortController =\n  globalThis.AbortController || require(\"abort-controller\")\n\nexport function wrapAbortSignal(signal?: AbortSignal) {\n  const controller = new AbortController()\n  if (signal?.aborted) controller.abort()\n  signal?.addEventListener(\"abort\", () => controller.abort())\n  return controller\n}\n","import {RpcClient, RpcNotification} from \"@onflow/util-rpc\"\n\nexport type DiscoveryRpc = RpcClient<{}, DiscoveryNotifications>\n\nexport enum DiscoveryNotification {\n  NOTIFY_QRCODE_CONNECTING = \"notifyQrCodeConnecting\",\n  NOTIFY_QRCODE_CONNECTED = \"notifyQrCodeConnected\",\n  NOTIFY_QRCODE_ERROR = \"notifyQrCodeError\",\n}\n\nexport enum FclRequest {\n  REQUEST_WALLETCONNECT_QRCODE = \"requestWalletConnectQrCode\",\n  EXEC_SERVICE = \"execService\",\n}\n\nexport type DiscoveryNotifications = {\n  [DiscoveryNotification.NOTIFY_QRCODE_CONNECTING]: RpcNotification<{\n    uri: string\n  }>\n  [DiscoveryNotification.NOTIFY_QRCODE_CONNECTED]: RpcNotification<{\n    uri: string\n  }>\n  [DiscoveryNotification.NOTIFY_QRCODE_ERROR]: RpcNotification<{\n    uri: string\n    error: string\n  }>\n}\n","import {execStrategy, normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {Service} from \"@onflow/typedefs\"\n\nconst APPROVED = \"APPROVED\"\n\n// RPC handler for handling service execution requests (e.g extension service)\nexport const execServiceHandlerFactory =\n  ({\n    onExecResult,\n    execStrategyOpts,\n    execStrategyArgs,\n    abortSignal,\n  }: {\n    onExecResult: (result: any) => void\n    execStrategyOpts: any\n    execStrategyArgs: any\n    abortSignal: AbortSignal\n  }) =>\n  async ({service}: {service: Service}) => {\n    try {\n      const result = await (execStrategy as any)(\n        {\n          ...execStrategyOpts,\n          service,\n          config: execStrategyOpts.config,\n          abortSignal,\n        },\n        // Pass the rest of the arguments (protect against future changes)\n        ...execStrategyArgs.slice(1)\n      )\n\n      const status = normalizePollingResponse(result)?.status || APPROVED\n      if (status === APPROVED) {\n        // Propogrates the result to the execStrategy hook\n        onExecResult(result)\n\n        // Notify Discovery that the service was approved\n        return null\n      } else {\n        // Notify Discovery that the service was rejected\n        throw new Error(result?.reason || \"Service was declined\")\n      }\n    } catch (e: any) {\n      throw new Error(e?.message || \"Service execution failed\")\n    }\n  }\n","import {\n  createSessionProposal,\n  FLOW_METHODS,\n  getSignClient,\n  request as wcRequest,\n} from \"@onflow/fcl-wc\"\nimport {DiscoveryNotification, DiscoveryRpc} from \"../requests\"\n\n// RPC handler for handling WalletConnect QR code requests\nexport const wcRequestHandlerFactory = ({\n  rpc,\n  onExecResult,\n  authnBody,\n  abortSignal,\n}: {\n  rpc: DiscoveryRpc\n  onExecResult: (result: any) => void\n  authnBody: any\n  abortSignal: AbortSignal\n}) => {\n  const watchQr = watchQrFactory({\n    rpc,\n    authnBody,\n  })\n\n  return async ({}) => {\n    if (abortSignal.aborted) {\n      throw new Error(\"Handler has been terminated\")\n    }\n\n    const client = await getSignClient()\n\n    // Execute WC bypass if session is approved\n    const {uri, approval} = await createSessionProposal({\n      client,\n    })\n\n    // Watch for QR code connection asynchronously\n    watchQr({\n      uri,\n      approval,\n      onExecResult,\n    })\n\n    return {uri}\n  }\n}\n\nexport function watchQrFactory({\n  rpc,\n  authnBody,\n}: {\n  rpc: DiscoveryRpc\n  authnBody: any\n}) {\n  return ({\n    uri,\n    approval,\n    onExecResult,\n  }: {\n    uri: string\n    onExecResult: (result: any) => void\n    approval: any\n  }) => {\n    // Watch for QR code connection & resolve callback if connected\n    setTimeout(async () => {\n      try {\n        const client = await getSignClient()\n        const session = await approval()\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_CONNECTING, {\n          uri,\n        })\n\n        const result = await wcRequest({\n          method: FLOW_METHODS.FLOW_AUTHN,\n          body: authnBody,\n          session,\n          client,\n        })\n\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_CONNECTED, {\n          uri,\n        })\n        onExecResult(result)\n      } catch (e: any) {\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_ERROR, {\n          uri,\n          error: e?.message,\n        })\n      }\n    }, 0)\n  }\n}\n","import {execStrategy} from \"@onflow/fcl-core\"\nimport {wrapAbortSignal} from \"../utils/async\"\nimport {createDiscoveryRpcClient} from \"./rpc/client\"\nimport {execDiscovery} from \"./exec-discovery\"\n\nconst AUTHN_SERVICE_TYPE = \"authn\"\n\n// Defines the execStrategy hook for Discovery Service\n// Used to define custom service execution rules for the Discovery Service\nexport async function execStrategyHook(...args: any) {\n  const [opts] = args\n  const {body, abortSignal: baseAbortSignal, service} = opts\n\n  // Ensure the service type is \"auth\" for the execStrategyHook\n  if (service?.type !== AUTHN_SERVICE_TYPE) {\n    console.error(\n      `ERROR: Invalid service type for FCL Discovery execStrategyHook, expected \"${AUTHN_SERVICE_TYPE}\" but got \"${service?.type}\"`\n    )\n    return (execStrategy as any)(...args)\n  }\n\n  // Create an abort controller for this context\n  // Either used to terminate WC bypass proposal loop or the base discovery request\n  const abortController = wrapAbortSignal(baseAbortSignal)\n\n  let discoveryPromise: Promise<any> | undefined\n  const resultPromise = new Promise(async (resolve, reject) => {\n    // Initialize the discovery RPC client\n    const rpc = createDiscoveryRpcClient({\n      onExecResult: resolve,\n      body,\n      opts,\n      args,\n      abortSignal: abortController.signal,\n    })\n\n    // Execute the base discovery request\n    discoveryPromise = execDiscovery({\n      customRpc: rpc,\n      opts,\n      args,\n      abortSignal: abortController.signal,\n    }).then(resolve, reject)\n  })\n\n  // Wait for the result promise to resolve or reject\n  await resultPromise.catch(() => {})\n\n  // Give Discovery time to cleanup\n  await Promise.race([\n    new Promise(resolve => setTimeout(resolve, 1000)),\n    discoveryPromise,\n  ]).catch(() => {})\n\n  // Ensure the abort signal is propagated to all candidates on completion\n  abortController.abort()\n\n  // Return the result\n  return resultPromise\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n  color-scheme: light;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *; clipboard-write\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  const popup = win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n  if (!popup)\n    throw new Error(\"Popup failed to open (was it blocked by a popup blocker?)\")\n  return popup\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 770)\n  } else if (previousUrl !== src) {\n    popup.location.replace(src)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n    }\n    popup = null\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n    if (!tab)\n      throw new Error(\"Tab failed to open (was it blocked by the browser?)\")\n  } else if (previousUrl !== src) {\n    tab.location.replace(src)\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n    }\n    tab = null\n  }\n\n  return [tab, unmount]\n}\n","const isServerSide = () => typeof window === \"undefined\"\n\nconst getSessionStorage = () => {\n  try {\n    const SESSION_STORAGE = {\n      can: !isServerSide(),\n      get: async key => JSON.parse(sessionStorage.getItem(key)),\n      put: async (key, value) =>\n        sessionStorage.setItem(key, JSON.stringify(value)),\n    }\n    return SESSION_STORAGE\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getDefaultConfig = () => {\n  return {\n    \"discovery.wallet.method.default\": \"IFRAME/RPC\",\n    \"fcl.storage.default\": getSessionStorage(),\n  }\n}\n","import {renderFrame} from \"../../render-frame\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $frame, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $frame,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","import {renderPop} from \"../../render-pop\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $pop, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $pop,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$pop, unmount] = renderPop(serviceEndpoint(service))\n\n  const timer = setInterval(function () {\n    if ($pop && $pop.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {renderTab} from \"../../render-tab\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $tab, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $tab,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$tab, unmount] = renderTab(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($tab && $tab.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {buildMessageHandler} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function extension(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n  })\n  window.addEventListener(\"message\", handler)\n\n  send({service})\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      onClose()\n    } catch (error) {\n      console.error(\"Ext Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      window && window.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Ext Send Error\", msg, error)\n    }\n  }\n}\n","import {renderFrame} from \"./render-frame\"\nimport {renderPop} from \"./render-pop\"\nimport {renderTab} from \"./render-tab\"\n\nconst NOT_IMPLEMENTED = () => {\n  throw new Error(\"Strategy util has not been implemented on this platform\")\n}\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n  \"VIEW/MOBILE_BROWSER\": NOT_IMPLEMENTED,\n  \"VIEW/DEEPLINK\": NOT_IMPLEMENTED,\n}\n\nexport async function execLocal(service, opts = {serviceEndpoint: () => {}}) {\n  const {serviceEndpoint} = opts\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {CORE_STRATEGIES, getExecHttpPost} from \"@onflow/fcl-core\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\nimport {execExtRPC} from \"./strategies/ext-rpc\"\nimport {execLocal} from \"./exec-local\"\n\nexport const coreStrategies = {\n  [CORE_STRATEGIES[\"HTTP/RPC\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"HTTP/POST\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"IFRAME/RPC\"]]: execIframeRPC,\n  [CORE_STRATEGIES[\"POP/RPC\"]]: execPopRPC,\n  [CORE_STRATEGIES[\"TAB/RPC\"]]: execTabRPC,\n  [CORE_STRATEGIES[\"EXT/RPC\"]]: execExtRPC,\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execIframeRPC({\n  service,\n  body,\n  config,\n  customRpc,\n  abortSignal,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    const {close} = frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            fclVersion: VERSION,\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        reject(`Declined: Aborted`)\n        close()\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        reject(`Declined: Aborted`)\n        close()\n      })\n    }\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execPopRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    const {close} = pop(service, {\n      customRpc,\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        reject(`Declined: Aborted`)\n        close()\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        reject(`Declined: Aborted`)\n        close()\n      })\n    }\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execTabRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    const {close} = tab(service, {\n      customRpc,\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        close()\n        reject(`Declined: Aborted`)\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        close()\n        reject(`Declined: Aborted`)\n      })\n    }\n  })\n}\n","import {extension} from \"./utils/extension\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execExtRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const {close} = extension(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                body: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        close()\n        reject(`Declined: Aborted`)\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        close()\n        reject(`Declined: Aborted`)\n      })\n    }\n  })\n}\n","import {config} from \"@onflow/config\"\nimport {pluginRegistry} from \"@onflow/fcl-core\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport * as fclWc from \"@onflow/fcl-wc\"\nimport {CoreTypes} from \"@walletconnect/types\"\n\nexport const isServer = typeof window === \"undefined\"\n\nconst getMetadata = (config: {\n  \"app.detail.title\": string | undefined | null\n  \"app.detail.icon\": string | undefined | null\n  \"app.detail.description\": undefined | null\n  \"app.detail.url\": string | undefined | null\n}): CoreTypes.Metadata => {\n  const appTitle = config[\"app.detail.title\"]\n  const appIcon = config[\"app.detail.icon\"]\n  const appDescription = config[\"app.detail.description\"]\n  const appUrl = config[\"app.detail.url\"]\n\n  return {\n    name: appTitle ?? document.title,\n    description: appDescription ?? \"\",\n    url: appUrl ?? window.location.origin,\n    icons: appIcon ? [appIcon] : [],\n  }\n}\n\nexport function initFclWcLoader() {\n  // We cannot load WalletConnect plugin on server side\n  if (isServer) {\n    return\n  }\n\n  // Use previous configuration to check for changes & notify the user that this is not possible\n  let lastConfig: string | null = null\n\n  // Only the first configuration will be used\n  let hasLoaded = false\n\n  config.subscribe(async (fullConfig: any) => {\n    const wcConfig = {\n      \"walletconnect.projectId\": fullConfig[\"walletconnect.projectId\"],\n      \"app.detail.title\": fullConfig[\"app.detail.title\"],\n      \"app.detail.icon\": fullConfig[\"app.detail.icon\"],\n      \"app.detail.description\": fullConfig[\"app.detail.description\"],\n      \"app.detail.url\": fullConfig[\"app.detail.url\"],\n    }\n    const projectId: string | undefined = wcConfig[\"walletconnect.projectId\"]\n\n    // Check if the plugin is already loaded by this loader, but with different configuration\n    // The plugin can only be loaded once\n    const previousConfig = lastConfig\n    lastConfig = JSON.stringify(wcConfig, null, 2)\n    if (hasLoaded) {\n      if (previousConfig !== lastConfig) {\n        console.warn(\n          `FCL WalletConnect Plugin has been already loaded with different configuration. It is not possible to change the configuration after the plugin has been loaded.\n\nPrevious configuration:\n${previousConfig}\n\nCurrent configuration:\n${lastConfig}`\n        )\n      }\n      return\n    }\n\n    // If the configuration is not set, we do not load the plugin\n    const isConfigured = !!projectId\n    if (!isConfigured) {\n      return\n    }\n\n    invariant(\n      !!projectId,\n      \"FCL Configuration value for 'walletconnect.projectId' is required\"\n    )\n\n    // Check if the plugin is already loaded manually\n    // Usually this won't happen as it is more likely that the plugin will be loaded by this loader\n    // before the developer has a chance to load it manually, but it's good to check\n    if (pluginRegistry.getPlugins().has(fclWc.SERVICE_PLUGIN_NAME)) {\n      if (!hasLoaded) {\n        console.warn(\n          \"It seems like the FCL WalletConnect plugins has been already loaded manually. This is no longer necessary, please see the documentation for more information.\"\n        )\n      }\n      hasLoaded = true\n      return\n    }\n    hasLoaded = true\n\n    // Load the plugin if not already loaded\n    // We must lazy load the plugin to avoid race conditions\n    // where the developer attempts to use the plugin before\n    // our loader applies the configuration\n    const {clientPromise: _clientPromise, FclWcServicePlugin} = fclWc.initLazy({\n      projectId,\n      metadata: getMetadata(wcConfig),\n    })\n    pluginRegistry.add([FclWcServicePlugin])\n  })\n}\n","export {\n  VERSION,\n  query,\n  verifyUserSignatures,\n  serialize,\n  tx,\n  events,\n  pluginRegistry,\n  discovery,\n  t,\n  WalletUtils,\n  AppUtils,\n  InteractionTemplateUtils,\n  getChainId,\n  TestUtils,\n  config,\n  send,\n  decode,\n  account,\n  block,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  build,\n  withPrefix,\n  sansPrefix,\n  display,\n  cadence,\n  cdc,\n  createSignableVoucher,\n  voucherIntercept,\n  voucherToTxId,\n  transaction,\n  script,\n  ping,\n  atBlockHeight,\n  atBlockId,\n  getAccount,\n  getEvents,\n  getEventsAtBlockHeightRange,\n  getEventsAtBlockIds,\n  getBlock,\n  getBlockHeader,\n  getCollection,\n  getTransactionStatus,\n  getTransaction,\n  getNetworkParameters,\n  getNodeVersionInfo,\n  authorizations,\n  authorization,\n  args,\n  arg,\n  proposer,\n  payer,\n  limit,\n  ref,\n  params,\n  param,\n  validator,\n  invariant,\n  subscribeEvents,\n  nodeVersionInfo,\n} from \"@onflow/fcl-core\"\n\nimport {getMutate, getCurrentUser, initServiceRegistry} from \"@onflow/fcl-core\"\n\nimport {execStrategyHook} from \"./discovery/exec-hook\"\nconst discoveryOpts = {\n  execStrategy: execStrategyHook,\n}\n\nexport const mutate = getMutate({platform: \"web\", discovery: discoveryOpts})\nexport const currentUser = getCurrentUser({\n  platform: \"web\",\n  discovery: discoveryOpts,\n})\n\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\nexport const authz = currentUser().authorization\n\nimport {config} from \"@onflow/config\"\nimport {getDefaultConfig, coreStrategies} from \"./utils/web\"\nimport {initFclWcLoader} from \"./utils/walletconnect/loader\"\n\nconfig(getDefaultConfig())\n\ninitServiceRegistry({coreStrategies})\n\n// Automatically load fcl-wc plugin\n// Based on the user's config\ninitFclWcLoader()\n","import {RpcClient} from \"@onflow/util-rpc\"\nimport {DiscoveryRpc, FclRequest} from \"./requests\"\nimport {execServiceHandlerFactory} from \"./handlers/exec-service\"\nimport {wcRequestHandlerFactory} from \"./handlers/request-wc-qr\"\n\n// Initialize the discovery RPC client\nexport function createDiscoveryRpcClient({\n  onExecResult,\n  body,\n  opts,\n  args,\n  abortSignal,\n}: {\n  onExecResult: (result: any) => void\n  body: any\n  opts: any\n  args: any\n  abortSignal: AbortSignal\n}) {\n  const rpc: DiscoveryRpc = new RpcClient({\n    notifications: [],\n  })\n\n  rpc.on(\n    FclRequest.REQUEST_WALLETCONNECT_QRCODE,\n    wcRequestHandlerFactory({\n      rpc,\n      onExecResult,\n      authnBody: body,\n      abortSignal,\n    })\n  )\n  rpc.on(\n    FclRequest.EXEC_SERVICE,\n    execServiceHandlerFactory({\n      onExecResult,\n      execStrategyOpts: opts,\n      execStrategyArgs: args,\n      abortSignal,\n    })\n  )\n\n  return {\n    connect: rpc.connect.bind(rpc),\n    receive: rpc.receive.bind(rpc),\n  }\n}\n","import {execStrategy} from \"@onflow/fcl-core\"\n\nexport async function execDiscovery({\n  customRpc,\n  opts,\n  args,\n  abortSignal,\n}: {\n  customRpc: any\n  opts: any\n  args: any\n  abortSignal: any\n}) {\n  // Update the discovery config to enable RPC support\n  const discoveryConfig = {\n    ...opts.config,\n    client: {\n      ...opts.config.client,\n      discoveryRpcEnabled: true,\n    },\n  }\n\n  // Execute base discovery request\n  return execStrategy(\n    {\n      ...opts,\n      config: discoveryConfig,\n      customRpc,\n      abortSignal,\n    },\n    // @ts-ignore - Pass the rest of the arguments (protect against future changes)\n    ...args.slice(1)\n  )\n}\n"],"names":["AbortController","globalThis","require","DiscoveryNotification","FclRequest","APPROVED","execServiceHandlerFactory","_ref","onExecResult","execStrategyOpts","execStrategyArgs","abortSignal","async","service","_ref2","result","execStrategy","config","slice","normalizePollingResponse","status","Error","reason","e","message","wcRequestHandlerFactory","rpc","authnBody","watchQr","_ref3","_ref4","uri","approval","setTimeout","client","getSignClient","session","notify","NOTIFY_QRCODE_CONNECTING","wcRequest","method","FLOW_METHODS","FLOW_AUTHN","body","NOTIFY_QRCODE_CONNECTED","NOTIFY_QRCODE_ERROR","error","watchQrFactory","aborted","createSessionProposal","AUTHN_SERVICE_TYPE","FRAME","FRAME_STYLES","renderFrame","src","invariant","document","getElementById","$frame","createElement","id","allow","frameBorder","style","cssText","append","contentWindow","unmount","remove","POP","popup","previousUrl","renderPop","closed","url","windowName","win","w","h","y","top","outerHeight","screenY","x","outerWidth","screenX","open","popupWindow","window","location","replace","focus","close","tab","renderTab","getSessionStorage","can","get","JSON","parse","sessionStorage","getItem","key","put","value","setItem","stringify","noop","VERSION","NOT_IMPLEMENTED","VIEWS","execLocal","opts","arguments","length","undefined","serviceEndpoint","console","coreStrategies","CORE_STRATEGIES","getExecHttpPost","customRpc","Promise","resolve","reject","uid","includeOlderJsonRpcCall","send","onClose","onMessage","onReady","onResponse","onCustomRpc","handler","buildMessageHandler","getSource","addEventListener","removeEventListener","msg","postMessage","frame","_","type","fclVersion","params","data","deprecated","jsonrpc","connect","payload","resp","receive","redir","$pop","timer","setInterval","clearInterval","pop","$tab","extension","isServer","getMetadata","appTitle","appIcon","appDescription","appUrl","name","title","description","origin","icons","discoveryOpts","_len","args","Array","_key","baseAbortSignal","abortController","signal","controller","abort","wrapAbortSignal","discoveryPromise","resultPromise","RpcClient","notifications","on","REQUEST_WALLETCONNECT_QRCODE","EXEC_SERVICE","bind","createDiscoveryRpcClient","discoveryConfig","discoveryRpcEnabled","execDiscovery","then","catch","race","mutate","getMutate","platform","discovery","currentUser","getCurrentUser","authz","authorization","initServiceRegistry","lastConfig","hasLoaded","subscribe","wcConfig","fullConfig","projectId","previousConfig","warn","pluginRegistry","getPlugins","has","fclWc","SERVICE_PLUGIN_NAME","clientPromise","_clientPromise","FclWcServicePlugin","initLazy","metadata","add","initFclWcLoader","authenticate","unauthenticate"],"mappings":"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"}