{"version":3,"file":"fcl.js","sources":["../src/utils/async.ts","../src/discovery/rpc/requests.ts","../src/discovery/rpc/handlers/exec-service.ts","../src/discovery/rpc/handlers/request-wc-qr.ts","../src/discovery/rpc/client.ts","../src/discovery/exec-discovery.ts","../src/discovery/exec-hook.ts","../src/utils/web/render-frame.js","../src/utils/web/render-pop.js","../src/utils/web/render-tab.js","../src/utils/web/default-config.js","../src/utils/web/strategies/utils/frame.js","../src/VERSION.js","../src/utils/web/strategies/iframe-rpc.js","../src/utils/web/strategies/utils/pop.js","../src/utils/web/strategies/pop-rpc.js","../src/utils/web/strategies/utils/tab.js","../src/utils/web/strategies/tab-rpc.js","../src/utils/web/strategies/utils/extension.js","../src/utils/web/strategies/ext-rpc.js","../src/utils/web/exec-local.js","../src/utils/web/coreStrategies.js","../src/utils/walletconnect/loader.ts","../src/fcl.ts"],"sourcesContent":["const AbortController =\n  globalThis.AbortController || require(\"abort-controller\")\n\nexport function wrapAbortSignal(signal?: AbortSignal) {\n  const controller = new AbortController()\n  if (signal?.aborted) controller.abort()\n  signal?.addEventListener(\"abort\", () => controller.abort())\n  return controller\n}\n","import {RpcClient, RpcNotification} from \"@onflow/util-rpc\"\n\nexport type DiscoveryRpc = RpcClient<{}, DiscoveryNotifications>\n\nexport enum DiscoveryNotification {\n  NOTIFY_QRCODE_CONNECTING = \"notifyQrCodeConnecting\",\n  NOTIFY_QRCODE_CONNECTED = \"notifyQrCodeConnected\",\n  NOTIFY_QRCODE_ERROR = \"notifyQrCodeError\",\n}\n\nexport enum FclRequest {\n  REQUEST_WALLETCONNECT_QRCODE = \"requestWalletConnectQrCode\",\n  EXEC_SERVICE = \"execService\",\n}\n\nexport type DiscoveryNotifications = {\n  [DiscoveryNotification.NOTIFY_QRCODE_CONNECTING]: RpcNotification<{\n    uri: string\n  }>\n  [DiscoveryNotification.NOTIFY_QRCODE_CONNECTED]: RpcNotification<{\n    uri: string\n  }>\n  [DiscoveryNotification.NOTIFY_QRCODE_ERROR]: RpcNotification<{\n    uri: string\n    error: string\n  }>\n}\n","import {execStrategy, normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {Service} from \"@onflow/typedefs\"\n\nconst APPROVED = \"APPROVED\"\n\n// RPC handler for handling service execution requests (e.g extension service)\nexport const execServiceHandlerFactory =\n  ({\n    onExecResult,\n    execStrategyOpts,\n    execStrategyArgs,\n    abortSignal,\n  }: {\n    onExecResult: (result: any) => void\n    execStrategyOpts: any\n    execStrategyArgs: any\n    abortSignal: AbortSignal\n  }) =>\n  async ({service}: {service: Service}) => {\n    try {\n      const result = await (execStrategy as any)(\n        {\n          ...execStrategyOpts,\n          service,\n          config: execStrategyOpts.config,\n          abortSignal,\n        },\n        // Pass the rest of the arguments (protect against future changes)\n        ...execStrategyArgs.slice(1)\n      )\n\n      const status = normalizePollingResponse(result)?.status || APPROVED\n      if (status === APPROVED) {\n        // Propogrates the result to the execStrategy hook\n        onExecResult(result)\n\n        // Notify Discovery that the service was approved\n        return null\n      } else {\n        // Notify Discovery that the service was rejected\n        throw new Error(result?.reason || \"Service was declined\")\n      }\n    } catch (e: any) {\n      throw new Error(e?.message || \"Service execution failed\")\n    }\n  }\n","import {\n  createSessionProposal,\n  FLOW_METHODS,\n  getSignClient,\n  request as wcRequest,\n} from \"@onflow/fcl-wc\"\nimport {DiscoveryNotification, DiscoveryRpc} from \"../requests\"\n\n// RPC handler for handling WalletConnect QR code requests\nexport const wcRequestHandlerFactory = ({\n  rpc,\n  onExecResult,\n  authnBody,\n  abortSignal,\n}: {\n  rpc: DiscoveryRpc\n  onExecResult: (result: any) => void\n  authnBody: any\n  abortSignal: AbortSignal\n}) => {\n  const watchQr = watchQrFactory({\n    rpc,\n    authnBody,\n  })\n\n  return async ({}) => {\n    if (abortSignal.aborted) {\n      throw new Error(\"Handler has been terminated\")\n    }\n\n    const client = await getSignClient()\n\n    // Execute WC bypass if session is approved\n    const {uri, approval} = await createSessionProposal({\n      client,\n    })\n\n    // Watch for QR code connection asynchronously\n    watchQr({\n      uri,\n      approval,\n      onExecResult,\n    })\n\n    return {uri}\n  }\n}\n\nexport function watchQrFactory({\n  rpc,\n  authnBody,\n}: {\n  rpc: DiscoveryRpc\n  authnBody: any\n}) {\n  return ({\n    uri,\n    approval,\n    onExecResult,\n  }: {\n    uri: string\n    onExecResult: (result: any) => void\n    approval: any\n  }) => {\n    // Watch for QR code connection & resolve callback if connected\n    setTimeout(async () => {\n      try {\n        const client = await getSignClient()\n        const session = await approval()\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_CONNECTING, {\n          uri,\n        })\n\n        const result = await wcRequest({\n          method: FLOW_METHODS.FLOW_AUTHN,\n          body: authnBody,\n          session,\n          client,\n        })\n\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_CONNECTED, {\n          uri,\n        })\n        onExecResult(result)\n      } catch (e: any) {\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_ERROR, {\n          uri,\n          error: e?.message,\n        })\n      }\n    }, 0)\n  }\n}\n","import {RpcClient} from \"@onflow/util-rpc\"\nimport {DiscoveryRpc, FclRequest} from \"./requests\"\nimport {execServiceHandlerFactory} from \"./handlers/exec-service\"\nimport {wcRequestHandlerFactory} from \"./handlers/request-wc-qr\"\n\n// Initialize the discovery RPC client\nexport function createDiscoveryRpcClient({\n  onExecResult,\n  body,\n  opts,\n  args,\n  abortSignal,\n}: {\n  onExecResult: (result: any) => void\n  body: any\n  opts: any\n  args: any\n  abortSignal: AbortSignal\n}) {\n  const rpc: DiscoveryRpc = new RpcClient({\n    notifications: [],\n  })\n\n  rpc.on(\n    FclRequest.REQUEST_WALLETCONNECT_QRCODE,\n    wcRequestHandlerFactory({\n      rpc,\n      onExecResult,\n      authnBody: body,\n      abortSignal,\n    })\n  )\n  rpc.on(\n    FclRequest.EXEC_SERVICE,\n    execServiceHandlerFactory({\n      onExecResult,\n      execStrategyOpts: opts,\n      execStrategyArgs: args,\n      abortSignal,\n    })\n  )\n\n  return {\n    connect: rpc.connect.bind(rpc),\n    receive: rpc.receive.bind(rpc),\n  }\n}\n","import {execStrategy} from \"@onflow/fcl-core\"\n\nexport async function execDiscovery({\n  customRpc,\n  opts,\n  args,\n  abortSignal,\n}: {\n  customRpc: any\n  opts: any\n  args: any\n  abortSignal: any\n}) {\n  // Update the discovery config to enable RPC support\n  const discoveryConfig = {\n    ...opts.config,\n    client: {\n      ...opts.config.client,\n      discoveryRpcEnabled: true,\n    },\n  }\n\n  // Execute base discovery request\n  return execStrategy(\n    {\n      ...opts,\n      config: discoveryConfig,\n      customRpc,\n      abortSignal,\n    },\n    // @ts-ignore - Pass the rest of the arguments (protect against future changes)\n    ...args.slice(1)\n  )\n}\n","import {execStrategy} from \"@onflow/fcl-core\"\nimport {wrapAbortSignal} from \"../utils/async\"\nimport {createDiscoveryRpcClient} from \"./rpc/client\"\nimport {execDiscovery} from \"./exec-discovery\"\n\nconst AUTHN_SERVICE_TYPE = \"authn\"\n\n// Defines the execStrategy hook for Discovery Service\n// Used to define custom service execution rules for the Discovery Service\nexport async function execStrategyHook(...args: any) {\n  const [opts] = args\n  const {body, abortSignal: baseAbortSignal, service} = opts\n\n  // Ensure the service type is \"auth\" for the execStrategyHook\n  if (service?.type !== AUTHN_SERVICE_TYPE) {\n    console.error(\n      `ERROR: Invalid service type for FCL Discovery execStrategyHook, expected \"${AUTHN_SERVICE_TYPE}\" but got \"${service?.type}\"`\n    )\n    return (execStrategy as any)(...args)\n  }\n\n  // Create an abort controller for this context\n  // Either used to terminate WC bypass proposal loop or the base discovery request\n  const abortController = wrapAbortSignal(baseAbortSignal)\n\n  let discoveryPromise: Promise<any> | undefined\n  const resultPromise = new Promise(async (resolve, reject) => {\n    // Initialize the discovery RPC client\n    const rpc = createDiscoveryRpcClient({\n      onExecResult: resolve,\n      body,\n      opts,\n      args,\n      abortSignal: abortController.signal,\n    })\n\n    // Execute the base discovery request\n    discoveryPromise = execDiscovery({\n      customRpc: rpc,\n      opts,\n      args,\n      abortSignal: abortController.signal,\n    }).then(resolve, reject)\n  })\n\n  // Wait for the result promise to resolve or reject\n  await resultPromise.catch(() => {})\n\n  // Give Discovery time to cleanup\n  await Promise.race([\n    new Promise(resolve => setTimeout(resolve, 1000)),\n    discoveryPromise,\n  ]).catch(() => {})\n\n  // Ensure the abort signal is propagated to all candidates on completion\n  abortController.abort()\n\n  // Return the result\n  return resultPromise\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n  color-scheme: light;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *; clipboard-write\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  const popup = win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n  if (!popup)\n    throw new Error(\"Popup failed to open (was it blocked by a popup blocker?)\")\n  return popup\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 770)\n  } else if (previousUrl !== src) {\n    popup.location.replace(src)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n    }\n    popup = null\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n    if (!tab)\n      throw new Error(\"Tab failed to open (was it blocked by the browser?)\")\n  } else if (previousUrl !== src) {\n    tab.location.replace(src)\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n    }\n    tab = null\n  }\n\n  return [tab, unmount]\n}\n","const isServerSide = () => typeof window === \"undefined\"\n\nconst getSessionStorage = () => {\n  try {\n    const SESSION_STORAGE = {\n      can: !isServerSide(),\n      get: async key => JSON.parse(sessionStorage.getItem(key)),\n      put: async (key, value) =>\n        sessionStorage.setItem(key, JSON.stringify(value)),\n    }\n    return SESSION_STORAGE\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getDefaultConfig = () => {\n  return {\n    \"discovery.wallet.method.default\": \"IFRAME/RPC\",\n    \"fcl.storage.default\": getSessionStorage(),\n  }\n}\n","import {renderFrame} from \"../../render-frame\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $frame, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $frame,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execIframeRPC({\n  service,\n  body,\n  config,\n  customRpc,\n  abortSignal,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    const {close} = frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            fclVersion: VERSION,\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        reject(`Declined: Aborted`)\n        close()\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        reject(`Declined: Aborted`)\n        close()\n      })\n    }\n  })\n}\n","import {renderPop} from \"../../render-pop\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $pop, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $pop,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$pop, unmount] = renderPop(serviceEndpoint(service))\n\n  const timer = setInterval(function () {\n    if ($pop && $pop.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execPopRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    const {close} = pop(service, {\n      customRpc,\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        reject(`Declined: Aborted`)\n        close()\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        reject(`Declined: Aborted`)\n        close()\n      })\n    }\n  })\n}\n","import {renderTab} from \"../../render-tab\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $tab, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $tab,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$tab, unmount] = renderTab(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($tab && $tab.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execTabRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    const {close} = tab(service, {\n      customRpc,\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        close()\n        reject(`Declined: Aborted`)\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        close()\n        reject(`Declined: Aborted`)\n      })\n    }\n  })\n}\n","import {buildMessageHandler} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function extension(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n  })\n  window.addEventListener(\"message\", handler)\n\n  send({service})\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      onClose()\n    } catch (error) {\n      console.error(\"Ext Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      window && window.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Ext Send Error\", msg, error)\n    }\n  }\n}\n","import {extension} from \"./utils/extension\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execExtRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const {close} = extension(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                body: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        close()\n        reject(`Declined: Aborted`)\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        close()\n        reject(`Declined: Aborted`)\n      })\n    }\n  })\n}\n","import {renderFrame} from \"./render-frame\"\nimport {renderPop} from \"./render-pop\"\nimport {renderTab} from \"./render-tab\"\n\nconst NOT_IMPLEMENTED = () => {\n  throw new Error(\"Strategy util has not been implemented on this platform\")\n}\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n  \"VIEW/MOBILE_BROWSER\": NOT_IMPLEMENTED,\n  \"VIEW/DEEPLINK\": NOT_IMPLEMENTED,\n}\n\nexport async function execLocal(service, opts = {serviceEndpoint: () => {}}) {\n  const {serviceEndpoint} = opts\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {CORE_STRATEGIES, getExecHttpPost} from \"@onflow/fcl-core\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\nimport {execExtRPC} from \"./strategies/ext-rpc\"\nimport {execLocal} from \"./exec-local\"\n\nexport const coreStrategies = {\n  [CORE_STRATEGIES[\"HTTP/RPC\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"HTTP/POST\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"IFRAME/RPC\"]]: execIframeRPC,\n  [CORE_STRATEGIES[\"POP/RPC\"]]: execPopRPC,\n  [CORE_STRATEGIES[\"TAB/RPC\"]]: execTabRPC,\n  [CORE_STRATEGIES[\"EXT/RPC\"]]: execExtRPC,\n}\n","import {config} from \"@onflow/config\"\nimport {pluginRegistry} from \"@onflow/fcl-core\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport * as fclWc from \"@onflow/fcl-wc\"\nimport {CoreTypes} from \"@walletconnect/types\"\n\nexport const isServer = typeof window === \"undefined\"\n\nconst getMetadata = (config: {\n  \"app.detail.title\": string | undefined | null\n  \"app.detail.icon\": string | undefined | null\n  \"app.detail.description\": undefined | null\n  \"app.detail.url\": string | undefined | null\n}): CoreTypes.Metadata => {\n  const appTitle = config[\"app.detail.title\"]\n  const appIcon = config[\"app.detail.icon\"]\n  const appDescription = config[\"app.detail.description\"]\n  const appUrl = config[\"app.detail.url\"]\n\n  return {\n    name: appTitle ?? document.title,\n    description: appDescription ?? \"\",\n    url: appUrl ?? window.location.origin,\n    icons: appIcon ? [appIcon] : [],\n  }\n}\n\nexport function initFclWcLoader() {\n  // We cannot load WalletConnect plugin on server side\n  if (isServer) {\n    return\n  }\n\n  // Use previous configuration to check for changes & notify the user that this is not possible\n  let lastConfig: string | null = null\n\n  // Only the first configuration will be used\n  let hasLoaded = false\n\n  config.subscribe(async (fullConfig: any) => {\n    const wcConfig = {\n      \"walletconnect.projectId\": fullConfig[\"walletconnect.projectId\"],\n      \"app.detail.title\": fullConfig[\"app.detail.title\"],\n      \"app.detail.icon\": fullConfig[\"app.detail.icon\"],\n      \"app.detail.description\": fullConfig[\"app.detail.description\"],\n      \"app.detail.url\": fullConfig[\"app.detail.url\"],\n    }\n    const projectId: string | undefined = wcConfig[\"walletconnect.projectId\"]\n\n    // Check if the plugin is already loaded by this loader, but with different configuration\n    // The plugin can only be loaded once\n    const previousConfig = lastConfig\n    lastConfig = JSON.stringify(wcConfig, null, 2)\n    if (hasLoaded) {\n      if (previousConfig !== lastConfig) {\n        console.warn(\n          `FCL WalletConnect Plugin has been already loaded with different configuration. It is not possible to change the configuration after the plugin has been loaded.\n\nPrevious configuration:\n${previousConfig}\n\nCurrent configuration:\n${lastConfig}`\n        )\n      }\n      return\n    }\n\n    // If the configuration is not set, we do not load the plugin\n    const isConfigured = !!projectId\n    if (!isConfigured) {\n      return\n    }\n\n    invariant(\n      !!projectId,\n      \"FCL Configuration value for 'walletconnect.projectId' is required\"\n    )\n\n    // Check if the plugin is already loaded manually\n    // Usually this won't happen as it is more likely that the plugin will be loaded by this loader\n    // before the developer has a chance to load it manually, but it's good to check\n    if (pluginRegistry.getPlugins().has(fclWc.SERVICE_PLUGIN_NAME)) {\n      if (!hasLoaded) {\n        console.warn(\n          \"It seems like the FCL WalletConnect plugins has been already loaded manually. This is no longer necessary, please see the documentation for more information.\"\n        )\n      }\n      hasLoaded = true\n      return\n    }\n    hasLoaded = true\n\n    // Load the plugin if not already loaded\n    // We must lazy load the plugin to avoid race conditions\n    // where the developer attempts to use the plugin before\n    // our loader applies the configuration\n    const {clientPromise: _clientPromise, FclWcServicePlugin} = fclWc.initLazy({\n      projectId,\n      metadata: getMetadata(wcConfig),\n    })\n    pluginRegistry.add([FclWcServicePlugin])\n  })\n}\n","export {\n  VERSION,\n  query,\n  verifyUserSignatures,\n  serialize,\n  tx,\n  events,\n  pluginRegistry,\n  discovery,\n  t,\n  WalletUtils,\n  AppUtils,\n  InteractionTemplateUtils,\n  getChainId,\n  TestUtils,\n  config,\n  send,\n  decode,\n  account,\n  block,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  build,\n  withPrefix,\n  sansPrefix,\n  display,\n  cadence,\n  cdc,\n  createSignableVoucher,\n  voucherIntercept,\n  voucherToTxId,\n  transaction,\n  script,\n  ping,\n  atBlockHeight,\n  atBlockId,\n  getAccount,\n  getEvents,\n  getEventsAtBlockHeightRange,\n  getEventsAtBlockIds,\n  getBlock,\n  getBlockHeader,\n  getCollection,\n  getTransactionStatus,\n  getTransaction,\n  getNetworkParameters,\n  getNodeVersionInfo,\n  authorizations,\n  authorization,\n  args,\n  arg,\n  proposer,\n  payer,\n  limit,\n  ref,\n  params,\n  param,\n  validator,\n  invariant,\n  subscribeEvents,\n  nodeVersionInfo,\n} from \"@onflow/fcl-core\"\n\nimport {getMutate, getCurrentUser, initServiceRegistry} from \"@onflow/fcl-core\"\n\nimport {execStrategyHook} from \"./discovery/exec-hook\"\nconst discoveryOpts = {\n  execStrategy: execStrategyHook,\n}\n\nexport const mutate = getMutate({platform: \"web\", discovery: discoveryOpts})\nexport const currentUser = getCurrentUser({\n  platform: \"web\",\n  discovery: discoveryOpts,\n})\n\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\nexport const authz = currentUser().authorization\n\nimport {config} from \"@onflow/config\"\nimport {getDefaultConfig, coreStrategies} from \"./utils/web\"\nimport {initFclWcLoader} from \"./utils/walletconnect/loader\"\n\nconfig(getDefaultConfig())\n\ninitServiceRegistry({coreStrategies})\n\n// Automatically load fcl-wc plugin\n// Based on the user's config\ninitFclWcLoader()\n"],"names":["AbortController","globalThis","require","wrapAbortSignal","signal","controller","aborted","abort","addEventListener","DiscoveryNotification","FclRequest","APPROVED","execServiceHandlerFactory","_ref","onExecResult","execStrategyOpts","execStrategyArgs","abortSignal","_ref2","service","result","execStrategy","config","slice","status","normalizePollingResponse","Error","reason","e","message","wcRequestHandlerFactory","rpc","authnBody","watchQr","watchQrFactory","client","getSignClient","uri","approval","createSessionProposal","_ref3","_ref4","setTimeout","session","notify","NOTIFY_QRCODE_CONNECTING","wcRequest","method","FLOW_METHODS","FLOW_AUTHN","body","NOTIFY_QRCODE_CONNECTED","NOTIFY_QRCODE_ERROR","error","createDiscoveryRpcClient","opts","args","RpcClient","notifications","on","REQUEST_WALLETCONNECT_QRCODE","EXEC_SERVICE","connect","bind","receive","execDiscovery","customRpc","discoveryConfig","discoveryRpcEnabled","AUTHN_SERVICE_TYPE","execStrategyHook","_len","arguments","length","Array","_key","baseAbortSignal","type","console","abortController","discoveryPromise","resultPromise","Promise","resolve","reject","then","catch","race","FRAME","FRAME_STYLES","renderFrame","src","invariant","document","getElementById","$frame","createElement","id","allow","frameBorder","style","cssText","append","unmount","remove","contentWindow","POP","popup","previousUrl","popupWindow","url","windowName","win","w","h","y","top","outerHeight","screenY","x","outerWidth","screenX","open","renderPop","closed","window","location","replace","focus","close","tab","renderTab","isServerSide","getSessionStorage","SESSION_STORAGE","can","get","key","JSON","parse","sessionStorage","getItem","put","value","setItem","stringify","getDefaultConfig","noop","frame","undefined","send","onClose","onMessage","onReady","onResponse","onCustomRpc","handler","buildMessageHandler","getSource","serviceEndpoint","removeEventListener","msg","postMessage","VERSION","execIframeRPC","uid","includeOlderJsonRpcCall","_","fclVersion","params","data","deprecated","jsonrpc","payload","resp","pop","$pop","timer","setInterval","clearInterval","execPopRPC","redir","$tab","execTabRPC","extension","execExtRPC","NOT_IMPLEMENTED","VIEWS","execLocal","coreStrategies","CORE_STRATEGIES","getExecHttpPost","isServer","getMetadata","appTitle","appIcon","appDescription","appUrl","name","title","description","origin","icons","initFclWcLoader","lastConfig","hasLoaded","subscribe","fullConfig","wcConfig","projectId","previousConfig","warn","isConfigured","pluginRegistry","getPlugins","has","fclWc","SERVICE_PLUGIN_NAME","clientPromise","_clientPromise","FclWcServicePlugin","initLazy","metadata","add","discoveryOpts","mutate","getMutate","platform","discovery","currentUser","getCurrentUser","authenticate","unauthenticate","reauthenticate","signUp","logIn","authz","authorization","initServiceRegistry"],"mappings":"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"}